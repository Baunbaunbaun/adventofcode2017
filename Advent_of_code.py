
# coding: utf-8

# In[1]:

import numpy as np


# # DAY 3

# In[68]:

# Q1

code = 312051

distance = 1
dist = 0
x = 0
y = -1
fak_dis = []
faktor = -1
count = 0

# we notice that the spiral always have a numbers 
# divisible by 8 in a diagonal from the field 8, 24, 48
# the difference of these numbers a faktor 3. Thus 1x8, 3x4, 6x8, ...
# We use this to find the bottom right corner of every border. 
# Therefore 1x8+2, 3x4+2, 6x8+2, ...
for i in range(999999999):
    count += i
    fak = count*8+2
    
    x+=1
    y+=1
    if (fak>code): 
        break
    if (fak<=(code)):
        faktor = fak
        dist = distance
        fak_dis.append((faktor,dist,x,y))
    distance+=2
    
# calculate the last numbers to move
last = code-faktor

# pull out (faktor, distance, x, y)
p = fak_dis[len(fak_dis)-1]
x, y = p[2],p[3]

# the four side length is sides[1]-sides[4]
# the first and the last are just for calculations
sides = [x+y-1,x+y, x+y+1, x+y+1, x+y+1,x+y+1]

print("The code number is", code)
print("distance to last left bottom corner",faktor,"is:", dist)
print("last numbers are (code-corner)", last)
print("(X,Y)=", x, y)

# work with the last four sides. 
# max numbers to move is round the four sides
for m in range(4):
    if (last>=sides[m+1]):
        dist = dist+(sides[m+2]-sides[m+1])        
        print("Last - side",m+1,":",last,"-",sides[m+1],"=", last-sides[m+1])       
    elif(last<sides[m+1] and last>=0):
        if(last<=sides[m+1]/2):
            # print("1subtract:",int(sides[m+1]/2))
            dist -= last
        else:
            print("2subtract:",int(sides[m+1]/2))
            dist -= sides[m+1]-last
        print("Distance is =",dist)
    last-=sides[m+1]


# In[ ]:

# Q2






# # DAY 2

# In[ ]:

data = np.loadtxt('data_day2.txt')


# In[ ]:

# Q1
chksum = 0
for i in range(data.shape[0]):
    row = data[i,:]
    chksum += max(row)-min(row) 
print(int(chksum))   


# In[ ]:

# Q2
chksum = 0
for i in range(data.shape[0]):
    row = data[i,:]
    mod = []
    for j in range(len(row)):
        for k in range(len(row)):
            if (row[j]%row[k]==0 and row[j]!=row[k]):
                mod.append(row[j])
                mod.append(row[k])
                chksum += max(mod)/min(mod)
print(chksum)


# In[ ]:

# DAY 1
code
s = str(code)
# s = str(555555)
n = len(s)
nh = int(n/2)


# In[ ]:

# Q1
out = 0
for i in range(n-1):
    if (s[i]==s[i+1]):
        out+=int(s[i+1])

print(out+int(s[0]))


# In[ ]:

# Q2
out = 0
for i in range(n):
    
    if (((nh+i)<n) and s[i]==s[i+nh]):
        out += int(s[i+nh])
    elif (s[i]==s[i-nh]):
        out+=int(s[i-nh])

print(out)

